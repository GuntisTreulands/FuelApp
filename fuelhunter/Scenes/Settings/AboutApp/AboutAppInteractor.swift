//
//  AboutAppInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 07/07/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData
import FirebaseCrashlytics

protocol AboutAppBusinessLogic {
  	func getListData(request: AboutApp.CompanyCells.Request)
}

protocol AboutAppDataStore {
}

class AboutAppInteractor: NSObject, AboutAppBusinessLogic, AboutAppDataStore, NSFetchedResultsControllerDelegate {
  	var presenter: AboutAppPresentationLogic?
  	var fetchedResultsController: NSFetchedResultsController<CompanyEntity>!

  	// MARK: AboutAppBusinessLogic

  	func getListData(request: AboutApp.CompanyCells.Request) {
  		if fetchedResultsController == nil {
			let context = DataBaseManager.shared.mainManagedObjectContext()
			let fetchRequest: NSFetchRequest<CompanyEntity> = CompanyEntity.fetchRequest()
			fetchRequest.predicate = NSPredicate(format: "isHidden == \(false)")
			let sort = NSSortDescriptor(key: "order", ascending: true)
			fetchRequest.sortDescriptors = [sort]
			fetchedResultsController = NSFetchedResultsController(fetchRequest: fetchRequest, managedObjectContext: context, sectionNameKeyPath: nil, cacheName: nil)

			fetchedResultsController.delegate = self
		}

		var fetchedCompanies: [CompanyEntity]?

		do {
			try fetchedResultsController.performFetch()

			fetchedCompanies = fetchedResultsController.fetchedObjects
		} catch let error {
			// Something went wrong
			Crashlytics.crashlytics().record(error: error)
			print("Something went wrong. \(error)")
		}

		let response = AboutApp.CompanyCells.Response(fetchedCompanies: fetchedCompanies ?? [])
    	presenter?.presentData(response: response)
  	}
}
