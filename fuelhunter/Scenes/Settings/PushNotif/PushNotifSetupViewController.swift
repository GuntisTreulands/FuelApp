//
//  PushNotifSetupViewController.swift
//  fuelhunter
//
//  Created by Guntis on 10/07/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PushNotifSetupDisplayLogic: class {
  	func updateData(viewModel: PushNotifSetup.SetUp.ViewModel)
}

class PushNotifSetupViewController: UIViewController, PushNotifSetupDisplayLogic, PushNotifSetupLayoutViewLogic, PushNotifChooseCityLayoutViewLogic {
  	var interactor: PushNotifSetupBusinessLogic?
  	var router: (NSObjectProtocol & PushNotifSetupRoutingLogic & PushNotifSetupDataPassing)?
	var mainLayoutView: PushNotifSetupLayoutView!
	var chooseCityLayoutView: PushNotifChooseCityLayoutView!

  	// MARK: Object lifecycle

  	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    	super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    	setup()
  	}

  	required init?(coder aDecoder: NSCoder) {
    	super.init(coder: aDecoder)
    	setup()
  	}

  	// MARK: View lifecycle

  	override func viewDidLoad() {
    	super.viewDidLoad()
    	self.view.backgroundColor = .clear
    	setUpViews()
		getData()
  	}

  	override func viewDidAppear(_ animated: Bool) {
		super.viewDidAppear(animated)
		mainLayoutView.appMovedToForeground()
		NotificationCenter.default.addObserver(self, selector: #selector(appMovedToForeground), name: UIApplication.willEnterForegroundNotification, object: nil)
		NotificationCenter.default.addObserver(self, selector: #selector(appMovedToBackground), name: UIApplication.didEnterBackgroundNotification, object: nil)
	}

	override func viewDidDisappear(_ animated: Bool) {
		super.viewDidDisappear(animated)
		let notificationCenter = NotificationCenter.default
		notificationCenter.removeObserver(self)
	}

	override func viewWillAppear(_ animated: Bool) {
		super.viewWillAppear(animated)
		mainLayoutView.animateBackgroundImageColorToState(visible: true)
	}

	override func viewWillDisappear(_ animated: Bool) {
		super.viewWillDisappear(animated)
		mainLayoutView.animateBackgroundImageColorToState(visible: false)
	}

	// MARK: Set up

  	private func setup() {
		let viewController = self
		let interactor = PushNotifSetupInteractor()
		let presenter = PushNotifSetupPresenter()
		let router = PushNotifSetupRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		presenter.router = router
		router.viewController = viewController
		router.dataStore = interactor
  	}

  	private func setUpViews() {
		mainLayoutView = PushNotifSetupLayoutView(frame: CGRect(x: 0, y: 0, width: self.view.frame.width, height: 100))
		self.view.addSubview(mainLayoutView)
		mainLayoutView.topAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.topAnchor).isActive = true
        mainLayoutView.leftAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.leftAnchor).isActive = true
        mainLayoutView.rightAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.rightAnchor).isActive = true
        mainLayoutView.bottomAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.bottomAnchor).isActive = true
		mainLayoutView.controller = self

		chooseCityLayoutView = PushNotifChooseCityLayoutView(frame: CGRect(x: 0, y: 0, width: self.view.frame.width, height: 100))
		self.view.addSubview(chooseCityLayoutView)
		chooseCityLayoutView.topAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.topAnchor).isActive = true
        chooseCityLayoutView.leftAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.leftAnchor).isActive = true
        chooseCityLayoutView.rightAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.rightAnchor).isActive = true
        chooseCityLayoutView.bottomAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.bottomAnchor).isActive = true
		chooseCityLayoutView.controller = self

		// Initially hidden
		chooseCityLayoutView.alpha = 0
	}

  	// MARK: Functions

	@objc private func appMovedToForeground() {
		mainLayoutView.appMovedToForeground()
	}

	@objc private func appMovedToBackground() {
		mainLayoutView.appMovedToBackground()
	}

	private func getData() {
    	let request = PushNotifSetup.SetUp.Request()
    	interactor?.getDataToShow(request: request)
  	}

	// MARK: PushNotifSetupDisplayLogic

  	func updateData(viewModel: PushNotifSetup.SetUp.ViewModel) {
  		mainLayoutView.updateData(data: viewModel)
  		chooseCityLayoutView.updateData(data: viewModel)
  	}

	// MARK: PushNotifSetupLayoutView

	func activateButtonPressed() {
  		interactor?.activateButtonPressed()
  	}

  	func cancelButtonPressed() {
  		interactor?.cancelButtonPressed()
  	}

  	func stepperPressed(value: Int) {
  		interactor?.stepperValueChangedTo(value)
  	}

  	func chooseCityButtonPressed(with frame: CGRect) {

		chooseCityLayoutView.updateFrontFrame(to: frame)

		let transitionOptions: UIView.AnimationOptions = [.transitionFlipFromRight, .showHideTransitionViews]

		UIView.animate(withDuration: 0.35, animations: { self.mainLayoutView.frontViewContainer.alpha = 0 });

		UIView.transition(with: mainLayoutView.frontViewContainer, duration: 0.6, options: transitionOptions, animations: { self.chooseCityLayoutView.alpha = 1 })

		UIView.transition(with: chooseCityLayoutView, duration: 0.6, options: transitionOptions, animations: { })
  	}

  	// MARK: PushNotifChooseCityLayoutViewLogic

  	func selectedCityWithName(_ name: String) {
  		interactor?.selectedCityWithName(name)
		backButtonPressed()
	}

  	func backButtonPressed() {
  		let transitionOptions: UIView.AnimationOptions = [.transitionFlipFromLeft, .showHideTransitionViews]

		UIView.animate(withDuration: 0.35, animations: { self.chooseCityLayoutView.alpha = 0 });

		UIView.transition(with: chooseCityLayoutView, duration: 0.6, options: transitionOptions, animations: { self.mainLayoutView.frontViewContainer.alpha = 1 })

		UIView.transition(with: mainLayoutView.frontViewContainer, duration: 0.6, options: transitionOptions, animations: { })
  	}
}
