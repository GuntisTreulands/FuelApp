//
//  PushNotifSetupInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 10/07/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PushNotifSetupBusinessLogic {
  	func getDataToShow(request: PushNotifSetup.SetUp.Request)
    func activateButtonPressed()
  	func cancelButtonPressed()
  	func stepperValueChangedTo(_ value: Int)
  	func selectedCityWithName(_ name: String)
}

protocol PushNotifSetupDataStore {
  	var centsValue: Int { get }
}

class PushNotifSetupInteractor: PushNotifSetupBusinessLogic, PushNotifSetupDataStore {
  	var presenter: PushNotifSetupPresentationLogic?
  	var appSettingsWorker = AppSettingsWorker.shared
	var centsValue: Int = 0
	var sortedCities = CityWorker.getCitiesByDistance()
	var selectedCityName = CityWorker.getClosestCityName()
	
	// MARK: PushNotifSetupBusinessLogic

  	func getDataToShow(request: PushNotifSetup.SetUp.Request) {
  		centsValue = appSettingsWorker.getStoredNotifCentsCount()
		callPresenter()
  	}

  	func activateButtonPressed() {
  		appSettingsWorker.setNotifEnabled(enabled: true)
  		appSettingsWorker.setStoredNotifCentsCount(count: centsValue)
  		appSettingsWorker.setStoredNotifCity(name: selectedCityName)

		DataDownloader.shared.activateToken()

		// This will give real city OR selected city (if gps is disabled)
		let cityName = CityWorker.getClosestCityName()
		appSettingsWorker.setStoredLastGPSDetectedCityName(name: cityName)

		// Needed for FuelListViewController - to show correct city,
		// if gps is disabled, show push notif chosen city name.
  		if AppSettingsWorker.shared.getGPSIsEnabled() == false {
			NotificationCenter.default.post(name: .settingsUpdated, object: nil)
		}

  		presenter?.returnBackToPreviousViewController()
  	}

  	func cancelButtonPressed() {
  		appSettingsWorker.setNotifEnabled(enabled: false)
		DataDownloader.shared.removeToken()
  		let cityName = CityWorker.getClosestCityName()
		appSettingsWorker.setStoredNotifCity(name: cityName)
		appSettingsWorker.setStoredLastGPSDetectedCityName(name: cityName)

  		presenter?.returnBackToPreviousViewController()
  	}

  	func stepperValueChangedTo(_ value: Int) {
  		centsValue = value
		callPresenter()
  	}

  	func selectedCityWithName(_ name: String) {
		selectedCityName = name
		callPresenter()
  	}

  	// MARK: Functions

  	private func callPresenter() {
		let minimumValue = AppSettingsWorker.minimumNotifCents
		let maximumValue = AppSettingsWorker.maximumNotifCents
		let convertedValue = appSettingsWorker.getCentsSymbolBasedOnValue(value: centsValue)

		let response = PushNotifSetup.SetUp.Response(value: centsValue, convertedValue: convertedValue, minValue: minimumValue, maxValue: maximumValue, sortedCities: sortedCities, selectedCityName: selectedCityName)
		presenter?.presentData(response: response)
  	}
}
