//
//  PushNotifSetupInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 10/07/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PushNotifSetupBusinessLogic {
  	func getDataToShow(request: PushNotifSetup.SetUp.Request)
    func activateButtonPressed()
  	func cancelButtonPressed()
  	func stepperValueChangedTo(value: Int)
}

protocol PushNotifSetupDataStore {
  	var centsValue: Int { get }
}

class PushNotifSetupInteractor: PushNotifSetupBusinessLogic, PushNotifSetupDataStore {
  	var presenter: PushNotifSetupPresentationLogic?
  	var appSettingsWorker = AppSettingsWorker.shared
	var centsValue: Int = 0

	// MARK: PushNotifSetupBusinessLogic

  	func getDataToShow(request: PushNotifSetup.SetUp.Request) {
		let minimumValue = AppSettingsWorker.minimumNotifCents
		let maximumValue = AppSettingsWorker.maximumNotifCents
		centsValue = appSettingsWorker.getStoredNotifCentsCount()
		let convertedValue = appSettingsWorker.getCentsSymbolBasedOnValue(value: centsValue)
    	let response = PushNotifSetup.SetUp.Response(value: centsValue, convertedValue: convertedValue, minValue: minimumValue, maxValue: maximumValue)
    	presenter?.presentData(response: response)
  	}

  	func activateButtonPressed() {
  		appSettingsWorker.setNotifEnabled(enabled: true)
  		appSettingsWorker.setStoredNotifCentsCount(count: centsValue)
  		presenter?.returnBackToPreviousViewController()
  	}

  	func cancelButtonPressed() {
  		appSettingsWorker.setNotifEnabled(enabled: false)
  		presenter?.returnBackToPreviousViewController()
  	}

  	func stepperValueChangedTo(value: Int) {
  		let minimumValue = AppSettingsWorker.minimumNotifCents
		let maximumValue = AppSettingsWorker.maximumNotifCents
		centsValue = value
		let convertedValue = appSettingsWorker.getCentsSymbolBasedOnValue(value: centsValue)
    	let response = PushNotifSetup.SetUp.Response(value: centsValue, convertedValue: convertedValue, minValue: minimumValue, maxValue: maximumValue)
    	presenter?.presentData(response: response)
  	}
}
