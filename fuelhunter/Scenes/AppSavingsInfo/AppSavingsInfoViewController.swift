//
//  AppSavingsInfoViewController.swift
//  fuelhunter
//
//  Created by Guntis on 15/07/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AppSavingsInfoDisplayLogic: class {
  	func displaySomething(viewModel: AppSavingsInfo.Something.ViewModel)
}

class AppSavingsInfoViewController: UIViewController, AppSavingsInfoDisplayLogic, UIScrollViewDelegate {
  	var interactor: AppSavingsInfoBusinessLogic?
  	var router: (NSObjectProtocol & AppSavingsInfoRoutingLogic & AppSavingsInfoDataPassing)?

	@IBOutlet weak var scrollView: UIScrollView!
	@IBOutlet weak var topShadowImageView: UIImageView!
	@IBOutlet weak var bottomShadowImageView: UIImageView!
	var activateShadowUpdates = false
	// MARK: Object lifecycle

  	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    	super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    	setup()
  	}

  	required init?(coder aDecoder: NSCoder) {
    	super.init(coder: aDecoder)
    	setup()
  	}

  	// MARK: Setup

  	private func setup() {
		let viewController = self
		let interactor = AppSavingsInfoInteractor()
		let presenter = AppSavingsInfoPresenter()
		let router = AppSavingsInfoRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
  	}

  	// MARK: View lifecycle

  	override func viewDidLoad() {
    	super.viewDidLoad()
    	self.title = "IetaupÄ«jums"
    	
    	
    	self.view.backgroundColor = .white
		scrollView.delegate = self
		scrollView.alwaysBounceVertical = true
    	getData()
    	
    	setUpView()
  	}

	override func viewDidAppear(_ animated: Bool) {
		super.viewDidAppear(animated)
		activateShadowUpdates = true
	}
	
	func scrollViewDidScroll(_ scrollView: UIScrollView) {
		if activateShadowUpdates == true {
			adjustVisibilityOfShadowLines()
		}
	}
	
	func adjustVisibilityOfShadowLines() {
		let alfa = min(50, max(0, scrollView.contentOffset.y))/50.0
		
		topShadowImageView.alpha = alfa
		
		let value = scrollView.contentOffset.y+scrollView.frame.size.height-scrollView.contentInset.bottom-scrollView.contentInset.top

		let alfa2 = min(50, max(0, scrollView.contentSize.height-value))/50.0
		
		bottomShadowImageView.alpha = alfa2
	}

	func setUpView() {
		let view = AppSavingsView.init(frame: CGRect.init(x: 0, y: 10, width: self.view.frame.width, height: 100))
		scrollView.addSubview(view)
		view.topAnchor.constraint(equalTo: scrollView.topAnchor, constant: 20).isActive = true
		view.widthAnchor.constraint(equalTo: self.scrollView.widthAnchor).isActive = true
		view.layoutIfNeeded()
		scrollView.contentSize = CGSize.init(width: scrollView.contentSize.width, height: view.frame.size.height+30)
		adjustVisibilityOfShadowLines()
	}
	
  	// MARK: Do something

  	func getData() {
//    	let request = AboutApp.CompanyCells.Request()
//    	interactor?.getData(request: request)
  	}

  	func displaySomething(viewModel: AppSavingsInfo.Something.ViewModel) {
//    	data = viewModel.displayedCompanyCellItems
//    	tableView.reloadData()
//		tableView.layoutIfNeeded()
//		adjustVisibilityOfShadowLines()
  	}
}
