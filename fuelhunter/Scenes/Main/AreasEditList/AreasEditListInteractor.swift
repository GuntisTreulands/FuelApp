//
//  AreasEditListInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 27/06/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData
import FirebaseCrashlytics

protocol AreasEditListBusinessLogic {
  	func getAreasData(request: Areas.AreasEditList.Request)
}

protocol AreasEditListDataStore {
}

class AreasEditListInteractor: NSObject, AreasEditListBusinessLogic, AreasEditListDataStore, NSFetchedResultsControllerDelegate {
  	var presenter: AreasEditListPresentationLogic?
	var fetchedResultsController: NSFetchedResultsController<AreasEntity>!
  	var worker = AreasEditListWorker()

	// MARK: AreasEditListBusinessLogic

  	func getAreasData(request: Areas.AreasEditList.Request) {

		if fetchedResultsController == nil {
			let context = DataBaseManager.shared.mainManagedObjectContext()
			let fetchRequest: NSFetchRequest<AreasEntity> = AreasEntity.fetchRequest()
			let sortId = NSSortDescriptor(key: "orderId", ascending: true)
			fetchRequest.sortDescriptors = [sortId]
			fetchedResultsController = NSFetchedResultsController(fetchRequest: fetchRequest, managedObjectContext: context,
				sectionNameKeyPath: nil, cacheName: nil)
			fetchedResultsController.delegate = self
		}

		do {
			try fetchedResultsController.performFetch()
			let response = Areas.AreasEditList.Response(fetchedAreas: fetchedResultsController.fetchedObjects ?? [])
			presenter?.presentAreasListWithData(response: response)

		} catch let error {
			print("areas fetch error %@", error)
		}
  	}

	// MARK: NSFetchedResultsControllerDelegate

  	func controllerDidChangeContent(_ controller: NSFetchedResultsController<NSFetchRequestResult>) {
  		let response = Areas.AreasEditList.Response(fetchedAreas: fetchedResultsController.fetchedObjects ?? [])
		presenter?.presentAreasListWithData(response: response)
	}
}
