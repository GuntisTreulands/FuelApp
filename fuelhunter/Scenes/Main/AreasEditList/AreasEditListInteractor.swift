//
//  AreasEditListInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 27/06/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData
import FirebaseCrashlytics

protocol AreasEditListBusinessLogic {
  	func getAreasData(request: Areas.AreasEditList.Request)
  	func createNewEmptyArea()
}

protocol AreasEditListDataStore {
}

class AreasEditListInteractor: NSObject, AreasEditListBusinessLogic, AreasEditListDataStore {
  	var presenter: AreasEditListPresentationLogic?
  	var worker = AreasEditListWorker()

	// MARK: AreasEditListBusinessLogic

  	func getAreasData(request: Areas.AreasEditList.Request) {

		do {
			let fetchRequest: NSFetchRequest<AreasEntity> = AreasEntity.fetchRequest()
			let sort = NSSortDescriptor(key: "orderId", ascending: true)
			fetchRequest.sortDescriptors = [sort]

			let areasObjectArray = try DataBaseManager.shared.mainManagedObjectContext().fetch(fetchRequest)

			let response = Areas.AreasEditList.Response(fetchedAreas: areasObjectArray)
			presenter?.presentAreasListWithData(response: response)

		} catch let error {
			print("areas fetch error %@", error)
		}
  	}

  	func createNewEmptyArea() {
		/*
			Real scenario would be - open set up pop up, and then create new area only if all parameters created.

		*/
		do {
			let fetchRequest: NSFetchRequest<AreasEntity> = AreasEntity.fetchRequest()

			let areasObjectArray = try DataBaseManager.shared.mainManagedObjectContext().fetch(fetchRequest)

			var name = "areas_create_new_area".localized()

			if areasObjectArray.count == 1 {
				name = "Neste"
			} else if areasObjectArray.count == 2 {
				name = "Circle K"
			} else if areasObjectArray.count == 3 {
				name = "Dinaz"
			} else if areasObjectArray.count == 4 {
				name = "Latvijas Nafta"
			} else if areasObjectArray.count == 5 {
				name = "Viada"
			} else if areasObjectArray.count == 6 {
				name = "RÄ«ga 2"
			}
			

			let task = {
				let areaObject = AreasEntity.init(context: DataBaseManager.shared.mainManagedObjectContext())
				areaObject.orderId = Int16(areasObjectArray.count)
				areaObject.isGPSArea = false
				areaObject.cheapPricesOnly = true
				areaObject.pushCents = 1
				areaObject.pushIsOn = false
				areaObject.name = name
				areaObject.id = Int16(areasObjectArray.count)
				DataBaseManager.shared.saveContext()
				self.getAreasData(request: Areas.AreasEditList.Request.init())
			}

			DataBaseManager.shared.addATask(action: task)
		} catch let error {
			print("fetch error %@", error)
		}
  	}

}
