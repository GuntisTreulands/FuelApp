//
//  FuelListPresenter.swift
//  fuelhunter
//
//  Created by Guntis on 03/06/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FuelListPresentationLogic {
	func presentSomething(response: FuelList.FetchPrices.Response)
}

class FuelListPresenter: FuelListPresentationLogic {
	weak var viewController: FuelListDisplayLogic?

	// MARK: Do something

	func presentSomething(response: FuelList.FetchPrices.Response) {
		
		var displayedPrices: [[FuelList.FetchPrices.ViewModel.DisplayedPrice]] = []
		
		let type95Prices = self.getPrices(with: .type95, from: response.prices)
		
		let type98Prices = self.getPrices(with: .type98, from: response.prices)
		
		let typeDDPrices = self.getPrices(with: .typeDD, from: response.prices)
		
		let typeDDProPrices = self.getPrices(with: .typeDDPro, from: response.prices)
		
		let typeGasPrices = self.getPrices(with: .typeGas, from: response.prices)
		
		if type95Prices.count > 0 {
			displayedPrices.append(type95Prices)
		}
		if type98Prices.count > 0 {
			displayedPrices.append(type98Prices)
		}
		if typeDDPrices.count > 0 {
			displayedPrices.append(typeDDPrices)
		}
		if typeDDProPrices.count > 0 {
			displayedPrices.append(typeDDProPrices)
		}
		if typeGasPrices.count > 0 {
			displayedPrices.append(typeGasPrices)
		}
    
		let viewModel = FuelList.FetchPrices.ViewModel(displayedPrices: displayedPrices)
		viewController?.displaySomething(viewModel: viewModel)
	}
	
	func getPrices(with type: FuelType, from prices: [Price]) -> [FuelList.FetchPrices.ViewModel.DisplayedPrice] {
    	var pricesToReturn: [FuelList.FetchPrices.ViewModel.DisplayedPrice] = []
    	
    	for aPrice in prices {
    		if aPrice.fuelType == type {
				let displayedPrice = FuelList.FetchPrices.ViewModel.DisplayedPrice.init(id: aPrice.id, companyName: aPrice.company.name, companyLogoName: aPrice.company.logoName, companyBigLogoName: aPrice.company.largeLogoName, price: aPrice.price, isPriceCheapest: aPrice.isPriceCheapest, fuelType: aPrice.fuelType, addressDescription: aPrice.addressDescription, address: aPrice.address, city: aPrice.city)
				pricesToReturn.append(displayedPrice)
			}
		}
		
		return pricesToReturn	
	}
}
