//
//  AreaEditPageInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 27/06/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData
import FirebaseCrashlytics

protocol AreaEditPageBusinessLogic {
  	func getData(request: Area.AreaEditPage.Request)
  	func updateName(request: Area.ChangeName.Request)
  	func toggleCheapest(request: Area.ToggleCheapest.Request)
  	func togglePushNotif(request: Area.ToggleNotif.Request)
  	func deletePressed()
}

protocol AreaEditPageDataStore {
	var areaId: Int! { get set }
}

class AreaEditPageInteractor: NSObject, AreaEditPageBusinessLogic, AreaEditPageDataStore {
	weak var router: AreaEditPageRouter?
  	var presenter: AreaEditPagePresentationLogic?
  	var worker = AreaEditPageWorker()
	var area: AreasEntity!
	var areaId: Int!

	// MARK: AreaEditPageBusinessLogic

  	func getData(request: Area.AreaEditPage.Request) {

		do {
			let fetchRequest: NSFetchRequest<AreasEntity> = AreasEntity.fetchRequest()
			fetchRequest.predicate = NSPredicate(format: "id == %i", areaId)
			let areasObjectArray = try DataBaseManager.shared.mainManagedObjectContext().fetch(fetchRequest)

			area = areasObjectArray.first!

			let response = Area.AreaEditPage.Response(fetchedArea: area)
			presenter?.presentAreaEditPageWithData(response: response)

		} catch let error {
			print("areas fetch error %@", error)
		}
  	}

  	func updateName(request: Area.ChangeName.Request) {
		let task = { [weak self] in
			self?.area.name = request.newName
			DataBaseManager.shared.saveContext()
			self?.updateData()
		}

		DataBaseManager.shared.addATask(action: task)
  	}

  	func toggleCheapest(request: Area.ToggleCheapest.Request) {
		let task = { [weak self] in
			self?.area.cheapPricesOnly = request.cheapest
			DataBaseManager.shared.saveContext()
			self?.updateData()
		}

		DataBaseManager.shared.addATask(action: task)
  	}

  	func togglePushNotif(request: Area.ToggleNotif.Request) {
		let task = { [weak self] in
			self?.area.pushIsOn = request.notif
			DataBaseManager.shared.saveContext()
			self?.updateData()
		}

		DataBaseManager.shared.addATask(action: task)
  	}

	func deletePressed() {
		let task = {
			DataBaseManager.shared.mainManagedObjectContext().delete(self.area)
			DataBaseManager.shared.saveContext()
			self.popBack()
		}

		DataBaseManager.shared.addATask(action: task)
	}

  	//MARK: Functions

  	internal func updateData() {
		let response = Area.AreaEditPage.Response(fetchedArea: area)
		presenter?.presentAreaEditPageWithData(response: response)
  	}

  	internal func popBack() {
  		router?.popViewController()
  	}
}
