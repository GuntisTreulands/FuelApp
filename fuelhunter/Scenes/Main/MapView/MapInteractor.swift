//
//  MapInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 12/08/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MapBusinessLogic {
  	func doSomething(request: Map.MapData.Request)
}

protocol MapDataStore {
  	var selectedFuelType: FuelType { get set }
  	var selectedDataIndex: Int { get set }
  	var selectedDataSection: Int { get set }
	var dataArray: [FuelList.FetchPrices.ViewModel.DisplayedPrice] { get set }
	var yLocation: CGFloat { get set }
}

class MapInteractor: MapBusinessLogic, MapDataStore {
  	var presenter: MapPresentationLogic?
  	var worker: MapWorker?
  	var selectedFuelType: FuelType = .type95
	var selectedDataIndex: Int = 0
	var selectedDataSection: Int = 0 // Used only for return value (to notify fuel list with cell was last active)
	var dataArray: [FuelList.FetchPrices.ViewModel.DisplayedPrice] = []
	var yLocation: CGFloat = 0

  	// MARK: Do something

  	func doSomething(request: Map.MapData.Request) {
    	worker = MapWorker()
    	let usableDataArray = worker!.createUsableDataArray(from: dataArray)

    	let response = Map.MapData.Response.init(displayedPoints: usableDataArray)
    	presenter?.presentSomething(response: response)
  	}
}
