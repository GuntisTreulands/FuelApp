//
//  MapPresenter.swift
//  fuelhunter
//
//  Created by Guntis on 12/08/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MapPresentationLogic {
  	func presentData(response: Map.MapData.Response)
  	func updateData(response: Map.MapPinRefresh.Response)
  	func updateToRevealMapPoint(response: Map.MapWasPressed.Response)
}

class MapPresenter: MapPresentationLogic {
  	weak var viewController: MapDisplayLogic?
	
  	// MARK: Do something

  	func presentData(response: Map.MapData.Response) {
		let viewModel = Map.MapData.ViewModel(displayedPoints: response.displayedPoints, mapPoints: response.mapPoints, selectedDisplayedPoint: response.selectedDisplayedPoint, selectedMapPoint: response.selectedMapPoint, cellType: response.cellType)
    	viewController?.displayData(viewModel: viewModel)
  	}

	func updateToRevealMapPoint(response: Map.MapWasPressed.Response) {
		let viewModel = Map.MapWasPressed.ViewModel(selectedDisplayedPoint: response.selectedDisplayedPoint, selectedMapPoint: response.selectedMapPoint, selectedPrice: response.selectedPrice, cellType: response.cellType)

		viewController?.updateToRevealMapPoint(viewModel: viewModel)
	}

	func updateData(response: Map.MapPinRefresh.Response) {
		let viewModel = Map.MapPinRefresh.ViewModel(mapPoint: response.mapPoint, mapPoints: response.mapPoints)
		viewController?.justRefreshMapPins(viewModel: viewModel)
	}
}
