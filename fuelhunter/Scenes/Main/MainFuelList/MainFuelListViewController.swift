//
//  MainFuelListViewController.swift
//  fuelhunter
//
//  Created by Guntis on 03/06/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


protocol MainFuelListDisplayLogic: class {
	func displaySomething(viewModel: MainFuelList.FetchPrices.ViewModel)
}

class MainFuelListViewController: UIViewController, MainFuelListDisplayLogic, MainFuelListLayoutViewLogic {
	var interactor: MainFuelListBusinessLogic?
	var router: (NSObjectProtocol & MainFuelListRoutingLogic & MainFuelListDataPassing)?
	var layoutView: MainFuelListLayoutView!

	// MARK: Object lifecycle

	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		setup()
	}

	// MARK: View lifecycle

	override func viewDidLoad() {
		super.viewDidLoad()
		self.navigationController!.navigationBar.topItem?.leftBarButtonItem = UIBarButtonItem.init(image:
			UIImage.init(named: "Settings_icon"), style: .plain, target: router, action:NSSelectorFromString("routeToSettings"))
		self.navigationController!.navigationBar.topItem?.title = "Fuel Hunter"
		self.navigationController!.navigationBar.setBackgroundImage(UIImage(), for: .default)
    	self.navigationController!.navigationBar.shadowImage = UIImage()
		self.navigationController!.navigationBar.isTranslucent = true
    	self.view.backgroundColor = .white
		setUpView()
		getData()
	}

	// Set up

	private func setup() {
		let viewController = self
		let interactor = MainFuelListInteractor()
		let presenter = MainFuelListPresenter()
		let router = MainFuelListRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}

	func setUpView() {
		layoutView = MainFuelListLayoutView.init(frame: CGRect.init(x: 0, y: 0, width: self.view.frame.width, height: 100))
		self.view.addSubview(layoutView)
		layoutView.topAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.topAnchor).isActive = true
        layoutView.leftAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.leftAnchor).isActive = true
        layoutView.rightAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.rightAnchor).isActive = true
        layoutView.bottomAnchor.constraint(equalTo: self.view.safeAreaLayoutGuide.bottomAnchor).isActive = true
		layoutView.controller = self
	}

	// MARK: Functions

	func getData() {
		let request = MainFuelList.FetchPrices.Request()
		interactor?.fetchPrices(request: request)
	}

	func displaySomething(viewModel: MainFuelList.FetchPrices.ViewModel) {
		layoutView.updateData(data: viewModel.displayedPrices)
	}

	// MARK: MainFuelListLayoutViewLogic

	func savingsButtonPressed() {
		router?.routeToAppSavingsInfo()
	}

	func accuracyButtonPressed() {
		router?.routeToAppAccuracyInfo()
	}
}
