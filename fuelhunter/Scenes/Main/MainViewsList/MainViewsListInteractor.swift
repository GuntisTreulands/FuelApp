//
//  MainViewsListInteractor.swift
//  fuelhunter
//
//  Created by Guntis on 03/06/2019.
//  Copyright (c) 2019 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData
import FirebaseCrashlytics

protocol MainViewsListBusinessLogic {
	func fetchAreas(request: MainViewsList.FetchAreas.Request)
}

protocol MainViewsListDataStore {
}

class MainViewsListInteractor: NSObject, MainViewsListBusinessLogic, MainViewsListDataStore {
	
	var presenter: MainViewsListPresentationLogic?

	// MARK: MainViewsListBusinessLogic

	func fetchAreas(request: MainViewsList.FetchAreas.Request) {

		do {
			let fetchRequest: NSFetchRequest<AreasEntity> = AreasEntity.fetchRequest()

			var areasObjectArray = try DataBaseManager.shared.mainManagedObjectContext().fetch(fetchRequest)

			if areasObjectArray.isEmpty {
				// TODO: this is temporary. Need to do this in bg, or at the start of app.
				let areaObject = AreasEntity.init(context: DataBaseManager.shared.mainManagedObjectContext())
				areaObject.isGPSArea = true
				areaObject.cheapPricesOnly = true
				areaObject.name = "GPS"
				DataBaseManager.shared.saveContext()

				areasObjectArray = [areaObject]
			}

			let response = MainViewsList.FetchAreas.Response.init(fetchedAreas: areasObjectArray)
			presenter?.presentData(response: response)

		} catch let error {
			print("fetch error %@", error)
		}
	}
}
